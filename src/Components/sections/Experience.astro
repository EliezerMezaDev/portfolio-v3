---
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";
import Section from "@/layouts/Section.astro";

interface Props {
  lang: "es" | "en";
  t: Record<string, any>;
}

const { lang, t } = Astro.props;

const experienceEntries = await getCollection("experience", ({ id }) => {
  return id.startsWith(`${lang}/`);
}).then((entries) => entries.sort((a, b) => a.slug.localeCompare(b.slug)));
---

<Section title={t.experience_section.title} id="experience">
  <Icon
    name="lucide:briefcase"
    slot="icon"
    class="size-10 md:size-12 translate-y-1 text-accent"
  />

  <div class="relative w-full max-w-3xl mx-auto mt-12">
    <div
      class="absolute left-4 top-2 h-full w-0.5 bg-brand-dark/50"
      data-timeline-line
    >
    </div>

    <ol class="relative flex flex-col gap-16">
      {
        await Promise.all(
          experienceEntries.map(async (entry) => {
            const { Content } = await entry.render();
            const { role, company, companyUrl, date } = entry.data;

            return (
              <li class="timeline-item flex items-start gap-x-6 translate-y-10">
                <div class="flex items-center justify-center size-8 rounded-full bg-accent/20 border-2 border-accent shrink-0 mt-1 ml-0.5">
                  <div class="size-2.5 rounded-full bg-accent" />
                </div>
                <div class="flex-grow">
                  <time class="text-sm text-brand-light/50">{date}</time>
                  <h3 class="text-xl font-bold text-brand-light mt-1">
                    {role}
                  </h3>
                  {companyUrl ? (
                    <a
                      href={companyUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-lg text-brand-light/80 hover:text-accent transition-colors"
                    >
                      @{company}
                    </a>
                  ) : (
                    <h4 class="text-lg text-brand-light/80">@{company}</h4>
                  )}
                  <div class="prose prose-invert mt-4 text-brand-light/80">
                    <Content />
                  </div>
                </div>
              </li>
            );
          })
        )
      }
    </ol>
  </div>
</Section>

<style>
  .prose ul {
    list-style-type: disc;
    padding-left: 1.5rem;
  }
  .prose li {
    padding-left: 0.5rem;
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("astro:page-load", () => {
    gsap.context(() => {
      const experienceSection =
        document.querySelector<HTMLElement>("#experience");
      const timelineLine = experienceSection?.querySelector<HTMLElement>(
        "[data-timeline-line]"
      );
      const items = gsap.utils.toArray<HTMLElement>(".timeline-item");

      if (timelineLine) {
        gsap.from(timelineLine, {
          scaleY: 0,
          transformOrigin: "top",
          ease: "none",
          scrollTrigger: {
            trigger: experienceSection,
            start: "top center",
            end: "bottom bottom",
            scrub: true,
          },
        });
      }

      items.forEach((item) => {
        gsap.from(item, {
          opacity: 0,
          x: -100,
          duration: 1,
          ease: "power3.out",
          scrollTrigger: {
            trigger: item,
            start: "top 85%",
            toggleActions: "play none none none",
          },
        });
      });
    }, "#experience");
  });
</script>
